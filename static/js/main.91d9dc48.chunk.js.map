{"version":3,"sources":["Utils/moment.js","Components/Header/Header.jsx","Components/FirstPage/FirstPage.jsx","Services/APIService.js","Components/Icon/types.js","Components/Icon/Icon.jsx","Components/BookingPage/BookingPage.jsx","App.jsx","index.jsx"],"names":["toDaysDate","moment","format","slice","yearAndMonth","day","Number","tomorrowsDate","toString","length","getStartDateFormat","date","getEndDateFormat","getDateFromDT","locale","Header","history","useHistory","useState","inputValue","setInputValue","startDate","setStartDate","endDate","setEndDate","className","onSubmit","e","preventDefault","trim","push","addValueToParams","value","type","placeholder","onChange","target","handleChangeValue","selected","selectsStart","placeholderText","selectsEnd","minDate","icon","faSearch","size","FirstPage","to","src","alt","apiService","getHotelsInCity","searchQuery","axios","get","params","lang","lookFor","limit","convertCase","then","data","results","locations","id","catch","error","console","сityId","currency","language","token","getWatherInCity","location","сityСoordinates","units","cnt","appid","lat","lon","WEATHER_ICONS_BY_TYPE","rain","clear","clouds","snow","unknown","getIconByWeatherType","Icon","weatherType","small","medium","large","BookingPage","match","hotels","setHotels","weatherList","setWeatherList","dateOnSelectedDays","filter","item","dt","useEffect","query","check_in","check_out","popularity","list","map","key","hotel_id","name","stars","weather","main","toLowerCase","Math","floor","temp","App","exact","path","component","application","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91d9dc48.chunk.js","sourcesContent":["import moment from 'moment';\nimport 'moment/locale/ru';\n\nexport const toDaysDate = moment().format().slice(0, 10);\nconst yearAndMonth = toDaysDate.slice(0, 8);\nconst day = Number(toDaysDate.slice(-2)) + 1;\nexport const tomorrowsDate = `${yearAndMonth}${day.toString().length === 2 ? '' : '0'}${day}`;\n\nexport const getStartDateFormat = (date) => {\n  return moment(date || toDaysDate).format().slice(0, 10);\n}\n\nexport const getEndDateFormat = (date) => {\n  return moment(date || tomorrowsDate).format().slice(0, 10);\n}\n\nexport const getDateFromDT = (date, format) => {\n  return moment(date * 1000).locale('ru').format(format);\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport \"./Header.scss\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport DatePicker from \"react-datepicker\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { getStartDateFormat, getEndDateFormat } from '../../Utils/moment';\n\nexport default function Header() {\n  const history = useHistory();\n  \n  const [inputValue, setInputValue] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  const handleChangeValue = ({ target }) => {\n    setInputValue(target.value);\n  };\n\n  const addValueToParams = (e) => {\n    e.preventDefault();\n    if (inputValue.trim() && startDate && endDate) {\n      history.push(\n        `/results/${inputValue}/${getStartDateFormat(startDate)}/${getEndDateFormat(endDate)}`\n        );\n    }\n  };\n\n  return (\n    <header className=\"header container\">\n        <form className=\"search-form\" onSubmit={(e) => addValueToParams(e)}>\n          <input\n            className=\"search-form__search\"\n            value={inputValue}\n            type=\"text\"\n            placeholder=\"Where are you going?\"\n            onChange={(e) => handleChangeValue(e)}\n          />\n          <DatePicker\n            className=\"search-form__date\"\n            selected={startDate}\n            onChange={(date) => setStartDate(date)}\n            selectsStart\n            startDate={startDate}\n            endDate={endDate}\n            placeholderText=\"check in\"\n          />\n          <DatePicker\n            className=\"search-form__date\"\n            selected={endDate}\n            onChange={(date) => setEndDate(date)}\n            selectsEnd\n            endDate={endDate}\n            minDate={startDate}\n            placeholderText=\"check out\"\n          />\n          <button\n            type=\"submit\"\n            className=\"search-form__button\"\n          >\n            <FontAwesomeIcon className=\"icon-comment\" icon={faSearch} size=\"lg\" />\n          </button>\n        </form>\n    </header>\n  )\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./FirstPage.scss\";\n\nimport { toDaysDate, tomorrowsDate } from '../../Utils/moment';\n\nexport default function FirstPage() {\n  return (\n    <section className=\"cities container\">\n      <div className=\"box-one\">\n        <Link to={`/results/kyiv/${toDaysDate}/${tomorrowsDate}`} className=\"box-one__item\">\n          <img className=\"box-one__img\" src=\"https://photo.hotellook.com/static/cities/960x720/IEV.jpg\" alt=\"no comments\"/>\n          <span className=\"box-one__name\">Kyiv</span>\n        </Link>\n        <Link to={`/results/kharkiv/${toDaysDate}/${tomorrowsDate}`} className=\"box-one__item\">\n          <img className=\"box-one__img\" src=\"https://photo.hotellook.com/static/cities/960x720/HRK.jpg\" alt=\"no comments\"/>\n          <span className=\"box-one__name\">Kharkiv</span>\n        </Link>\n      </div>\n\n      <div className=\"box-two\">\n        <Link to={`/results/lviv/${toDaysDate}/${tomorrowsDate}`} className=\"box-two__item\">\n          <img className=\"box-two__img\" src=\"https://photo.hotellook.com/static/cities/960x720/LWO.jpg\" alt=\"no comments\"/>\n          <span className=\"box-two__name\">Lviv</span>\n        </Link>\n        <Link to={`/results/odessa/${toDaysDate}/${tomorrowsDate}`} className=\"box-two__item\">\n          <img className=\"box-two__img\" src=\"https://photo.hotellook.com/static/cities/960x720/ODS.jpg\" alt=\"no comments\"/>\n          <span className=\"box-two__name\">Odessa</span>\n        </Link>\n        <Link to={`/results/dnipro/${toDaysDate}/${tomorrowsDate}`} className=\"box-two__item\">\n          <img className=\"box-two__img\" src=\"https://photo.hotellook.com/static/cities/960x720/DNK.jpg\" alt=\"no comments\"/>\n          <span className=\"box-two__name\">Dnipro</span>\n        </Link>\n      </div>\n\n      <div className=\"box-three\">\n        <Link to={`/results/chernivtsi/${toDaysDate}/${tomorrowsDate}`} className=\"box-three__item\">\n          <img className=\"box-three__img\" src=\"https://photo.hotellook.com/static/cities/960x720/CWC.jpg\" alt=\"no comments\"/>\n          <span className=\"box-three__name\">Chernivtsi</span>\n        </Link>\n        <Link to={`/results/vienna/${toDaysDate}/${tomorrowsDate}`} className=\"box-three__item\">\n          <img className=\"box-three__img\"  src=\"https://photo.hotellook.com/static/cities/960x720/VIE.jpg\" alt=\"no comments\"/>\n          <span className=\"box-three__name\">Vienna</span>\n        </Link>\n      </div>\n    </section>\n  )\n}\n","import axios from 'axios';\n\n\nconst apiService = {\n  async getHotelsInCity(searchQuery, date) {\n    const сityId = await axios.get('https://engine.hotellook.com/api/v2/lookup.json', {\n      params: {\n        lang: 'en',\n        lookFor: 'city',\n        limit: '1',\n        convertCase: '1',\n        ...searchQuery,\n      },\n    })\n      .then(({ data: { results: { locations } } }) => locations[0].id)\n      .catch((error) => console.error(error));\n\n    return await axios.get('https://yasen.hotellook.com/tp/public/widget_location_dump.json', {\n      params: {\n        currency: 'rub',\n        language: 'ru',\n        limit: '50',\n        id: сityId,\n        type: 'popularity',\n        token: '2e008ed683b1d0b7bde67d99528f808d',\n        ...date,\n      },\n    })\n  },\n\n  async getWatherInCity(searchQuery) {\n    const сityСoordinates = await axios.get('https://engine.hotellook.com/api/v2/lookup.json', {\n      params: {\n        lang: 'en',\n        lookFor: 'city',\n        limit: '1',\n        convertCase: '1',\n        ...searchQuery,\n      },\n    })\n        .then(({ data: { results: { locations } } }) => locations[0].location)\n        .catch((error) => console.error(error));\n        \n    return await axios.get('https://api.openweathermap.org/data/2.5/forecast/daily', {\n      params: {\n        units: 'metric',\n        cnt: '16',\n        appid: '47fe20af59af3bbf2a3b306a18fdb1d7',\n        lat: сityСoordinates.lat,\n        lon: сityСoordinates.lon,\n      },\n    })\n  }\n};\n\nexport default apiService;\n","const WEATHER_ICONS_BY_TYPE = {\n    rain: \"rain\",\n    clear: \"clear\",\n    clouds: \"cloudy\",\n    snow: 'snow',\n    unknown: \"unknown\",\n};\n\nexport const getIconByWeatherType = (type) => {\n    return WEATHER_ICONS_BY_TYPE[type || 'unknown'];\n}","import React from 'react';\nimport \"../Icon/wu-icons-style.scss\";\nimport \"../Icon/wu-icons-style.min.scss\";\n\nimport { getIconByWeatherType } from './types';\n\nexport default function Icon({ size, weatherType }) {\n  const iconSize = function() {\n    const sizes = {\n      small: '32',\n      medium: '64',\n      large: '128',\n    };\n    return sizes[size || 'small'];\n  };\n\n    return (\n      <>\n        <i className={`wu wu-solid-black wu-${iconSize()} wu-${getIconByWeatherType(weatherType)}`} />\n      </>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport \"./BookingPage.scss\";\n\nimport { getDateFromDT } from '../../Utils/moment';\n\nimport apiService from '../../Services/APIService';\nimport Icon from '../Icon/Icon';\n\nexport default function BookingPage({ match }) {\n  const { searchQuery } = match.params;\n  const { startDate } = match.params;\n  const { endDate } = match.params;\n\n  const [hotels, setHotels] = useState([]);\n  const [weatherList, setWeatherList] = useState([]);\n\n  const dateOnSelectedDays = weatherList.filter((item) => {\n    return getDateFromDT(item.dt).slice(0, 10) >= startDate &&\n           getDateFromDT(item.dt).slice(0, 10) <= endDate;\n  })\n\n  useEffect(() => {\n    apiService.getHotelsInCity({ query: searchQuery },\n      {\n        check_in: startDate,\n        check_out: endDate,\n      })\n        .then(({ data: { popularity } }) => setHotels(popularity));\n\n      apiService.getWatherInCity({ query: searchQuery })\n        .then((({ data: { list } }) => setWeatherList(list)));\n  }, [searchQuery, startDate, endDate]);\n\n  return (\n    <section className=\"container\">\n      <div className=\"hotels\">\n        { \n          hotels.map((item) => (\n            <div key={item.hotel_id} className=\"hotels__item hotel\">\n              <div className=\"hotel__info\">\n                <div className=\"hotel__name\">\n                  {item.name}\n                </div>\n\n                <div className=\"hotel__stars\">\n                  звезд: {item.stars}\n                </div>\n\n                <div className=\"hotel__text-date\">\n                  Выбранная дата:\n                </div>\n\n                <div className=\"hotel__weather weather\">\n                  {\n                    dateOnSelectedDays.map((day) => \n                      <div key={day.dt} className=\"weather__day\">\n                          <div className=\"weather__date\">{getDateFromDT(day.dt, 'D/M')}</div>\n                          <div>{getDateFromDT(day.dt, 'ddd')}</div>\n                          <Icon size=\"small\" key={day.dt} weatherType={day.weather[0].main.toLowerCase()} />\n                          <div>{Math.floor(day.temp.day)}°</div>\n                      </div>\n                    )\n                  }\n                </div>\n              </div>\n              \n              <div className=\"hotel__photo\">\n                  <img \n                    src={`https://photo.hotellook.com/image_v2/limit/h${item.hotel_id}_1/320/210.auto`}\n                    alt=\"no comments\"\n                  />\n                </div>\n            </div>\n          ))\n        }\n      </div>\n    </section>\n  )\n}\n\nBookingPage.propTypes = {\n  match: propTypes.shape().isRequired,\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nimport Header from './Components/Header/Header';\nimport FirstPage from './Components/FirstPage/FirstPage';\nimport BookingPage from './Components/BookingPage/BookingPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={FirstPage} />\n        <Route path=\"/results/:searchQuery/:startDate/:endDate\" component={BookingPage} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nconst application = (\n  <HashRouter>\n    <App />\n  </HashRouter>\n);\n\nReactDOM.render(application, document.getElementById('root'));\n"],"sourceRoot":""}